<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Workshop: Create with Gemini</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;900&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        .gradient-text {
            background: linear-gradient(to right, #6EE7B7, #3B82F6, #9333EA);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            text-fill-color: transparent;
        }
        .card {
            background-color: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            transition: all 0.2s ease-in-out;
        }
        .gemini-button {
            background: linear-gradient(to right, #3B82F6, #9333EA);
            transition: all 0.2s ease-in-out;
        }
        .gemini-button:hover {
            transform: scale(1.05);
            box-shadow: 0 0 20px rgba(147, 51, 234, 0.5);
        }
        .gemini-button:disabled {
            background: #4B5563;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        #modal-backdrop {
            transition: opacity 0.3s ease-in-out;
        }
        #modal-content {
            transition: transform 0.3s ease-in-out;
        }
    </style>
</head>
<body class="bg-gray-900 text-white antialiased">
    <div class="min-h-screen flex flex-col items-center justify-center p-4 lg:p-8">
        <div class="w-full max-w-7xl mx-auto">
            <!-- Header -->
            <header class="text-center mb-8 md:mb-12">
                <h1 class="text-4xl md:text-6xl font-black tracking-tighter gradient-text">AI Workshop</h1>
                <p class="text-xl md:text-2xl font-light text-gray-300 mt-2">Create Amazing Things with Gemini!</p>
            </header>

            <!-- Main Grid Layout -->
            <main class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">

                <!-- Column 1: Agenda -->
                <section class="card rounded-2xl p-6 col-span-1 md:col-span-2 lg:col-span-1 flex flex-col">
                    <div class="flex items-center mb-4">
                        <svg class="w-8 h-8 text-green-400 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
                        <h2 class="text-2xl font-bold text-green-400">Schedule</h2>
                    </div>
                    <ul class="space-y-2 text-gray-300 flex-grow text-sm">
                        <li><strong class="text-white">11:40 - 11:55</strong> (15m) Intro & Grouping</li>
                        <li><strong class="text-white">11:55 - 12:10</strong> (15m) Plan Your Project</li>
                        <li class="bg-blue-600/50 p-2 rounded-lg -mx-2"><strong class="text-white">12:10 - 12:40</strong> (30m) ‚ú® AI Creation Time!</li>
                        <li><strong class="text-white">12:40 - 12:50</strong> (10m) Prep for Presentation</li>
                        <li class="text-yellow-400 font-semibold"><strong class="text-white">12:50 - 1:50</strong> (60m) --- Lunch Break ---</li>
                        <li><strong class="text-white">1:50 - 2:20</strong> (30m) üöÄ Show & Tell + Feedback</li>
                    </ul>
                </section>

                <!-- Column 2: Topics -->
                <section class="card rounded-2xl p-6 col-span-1 md:col-span-2 lg:col-span-2">
                    <div class="flex items-center mb-4">
                        <svg class="w-8 h-8 text-blue-400 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path></svg>
                        <h2 class="text-2xl font-bold text-blue-400">Project Ideas</h2>
                    </div>
                     <p class="text-sm text-gray-400 mb-4">Pick one of these, or get inspired!</p>
                    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 text-gray-200">
                        <div class="flex flex-col h-full bg-gray-900/50 p-4 rounded-lg">
                            <h3 class="font-bold text-white">ü§ù Mock Interview</h3>
                            <p class="text-sm flex-grow mb-3">Role-play a job interview for a company like Google or for a career like a chef. Prepare your questions!</p>
                            <button id="interview-starter-btn" class="gemini-button text-white font-bold py-1 px-3 rounded-full text-xs self-start mt-auto">‚ú® Get First Question</button>
                        </div>
                         <div class="flex flex-col h-full bg-gray-900/50 p-4 rounded-lg">
                            <h3 class="font-bold text-white">üéâ Event Planner</h3>
                            <p class="text-sm flex-grow mb-3">Plan a club event or party. Create the invitation, poster text, and schedule.</p>
                            <button id="event-planner-btn" class="gemini-button text-white font-bold py-1 px-3 rounded-full text-xs self-start mt-auto">‚ú® Draft Invitation</button>
                        </div>
                        <div class="flex flex-col h-full bg-gray-900/50 p-4 rounded-lg">
                            <h3 class="font-bold text-white">üìñ Creative Storyteller</h3>
                            <p class="text-sm flex-grow mb-3">Use AI for storytelling. Write a short story, a poem, or song lyrics with your AI partner.</p>
                            <button id="story-starter-btn" class="gemini-button text-white font-bold py-1 px-3 rounded-full text-xs self-start mt-auto">‚ú® Write First Line</button>
                        </div>
                        <div class="border-2 border-dashed border-gray-500 rounded-lg p-4 flex flex-col items-center justify-center text-center">
                            <h3 class="font-bold text-white">üí° Your Own Idea!</h3>
                            <p id="idea-result" class="text-sm mb-3 flex-grow">Feeling stuck? Let Gemini spark an idea for you.</p>
                            <button id="idea-generator-btn" class="gemini-button text-white font-bold py-2 px-4 rounded-full text-sm">‚ú® Spark an Idea</button>
                        </div>
                    </div>
                </section>

                <!-- Column 3: Goal, Tips & Tools -->
                <div class="col-span-1 md:col-span-2 lg:col-span-1 flex flex-col gap-6">
                    <!-- Expected Result -->
                    <section class="card rounded-2xl p-6">
                        <div class="flex items-center mb-3">
                            <svg class="w-8 h-8 text-purple-400 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path></svg>
                            <h2 class="text-2xl font-bold text-purple-400">Your Goal</h2>
                        </div>
                        <p class="text-gray-200 text-sm">
                            <span class="block mb-2">1. Create <strong class="text-white">one cool output</strong> with your group.</span>
                            <span class="block mb-2">2. Prepare a <strong class="text-white">2-min presentation</strong> to share what you made.</span>
                            <span class="block">3. Give <strong class="text-white">constructive feedback</strong> to another group.</span>
                        </p>
                    </section>
                    
                    <!-- Pro Tips -->
                    <section class="card rounded-2xl p-6">
                       <div class="flex items-center mb-3">
                            <svg class="w-8 h-8 text-yellow-400 mr-3" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm4.24 16.24l-1.41 1.41L12 16.83l-2.83 2.83-1.41-1.41L10.59 15l-2.83-2.83 1.41-1.41L12 12.17l2.83-2.83 1.41 1.41L13.41 14l2.83 2.83z"/></svg>
                            <h2 class="text-2xl font-bold text-yellow-400">Pro Tips</h2>
                        </div>
                         <ul class="space-y-1 text-sm text-gray-300">
                             <li><strong class="text-white">Be Specific:</strong> "Write a funny story..." is better than "Write a story."</li>
                             <li><strong class="text-white">Give it a Role:</strong> "Act like a travel blogger..."</li>
                             <li><strong class="text-white">Ask for Formats:</strong> "...in a bulleted list" or "...in a table."</li>
                             <li><strong class="text-white">For Images:</strong> Describe style (e.g., 'photorealistic', 'cartoon').</li>
                             <li><strong class="text-white">Iterate:</strong> Ask it to "make it funnier" or "add more detail."</li>
                         </ul>
                    </section>

                    <!-- Prompt Perfecter -->
                    <section class="card rounded-2xl p-6 flex flex-col">
                       <div class="flex items-center mb-3">
                            <svg class="w-8 h-8 text-indigo-400 mr-3" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"></path></svg>
                            <h2 class="text-2xl font-bold text-indigo-400">Prompt Perfecter</h2>
                        </div>
                        <p class="text-sm text-gray-400 mb-2">Enter a simple idea to see how Gemini can make it a better prompt.</p>
                         <div class="flex-grow flex flex-col space-y-2">
                             <input type="text" id="prompt-input" placeholder="e.g., a fast car" class="bg-gray-800 border border-gray-600 text-white text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5">
                              <button id="prompt-enhancer-btn" class="gemini-button text-white font-bold py-2 px-4 rounded-full text-sm">‚ú® Enhance Prompt</button>
                         </div>
                    </section>
                </div>
            </main>
        </div>
    </div>
    
    <!-- Modal -->
    <div id="modal" class="fixed inset-0 z-50 items-center justify-center hidden">
        <div id="modal-backdrop" class="fixed inset-0 bg-black bg-opacity-70"></div>
        <div id="modal-content" class="card rounded-2xl p-6 relative w-11/12 max-w-lg mx-auto mt-20 scale-95">
            <h3 id="modal-title" class="text-xl font-bold mb-4 gradient-text">Gemini is thinking...</h3>
            <div id="modal-body" class="text-gray-300">
                <div class="flex justify-center items-center h-24">
                    <svg class="animate-spin -ml-1 mr-3 h-10 w-10 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                </div>
            </div>
            <button id="modal-close-btn" class="absolute top-4 right-4 text-gray-400 hover:text-white">&times;</button>
        </div>
    </div>

    <script type="module">
        // --- DOM Elements ---
        const ideaGeneratorBtn = document.getElementById('idea-generator-btn');
        const ideaResultEl = document.getElementById('idea-result');
        const promptEnhancerBtn = document.getElementById('prompt-enhancer-btn');
        const promptInput = document.getElementById('prompt-input');
        const interviewStarterBtn = document.getElementById('interview-starter-btn');
        const eventPlannerBtn = document.getElementById('event-planner-btn');
        const storyStarterBtn = document.getElementById('story-starter-btn');
        
        const modal = document.getElementById('modal');
        const modalBackdrop = document.getElementById('modal-backdrop');
        const modalContent = document.getElementById('modal-content');
        const modalTitle = document.getElementById('modal-title');
        const modalBody = document.getElementById('modal-body');
        const modalCloseBtn = document.getElementById('modal-close-btn');

        // --- Gemini API Configuration ---
        // The API key is an empty string. Canvas will automatically provide it in runtime.
        const apiKey = ""; 
        const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-04-17:generateContent?key=${apiKey}`;

        let isLoading = false;

        // --- Utility Functions ---
        function setLoading(state) {
            isLoading = state;
            ideaGeneratorBtn.disabled = state;
            promptEnhancerBtn.disabled = state;
            promptInput.disabled = state;
            interviewStarterBtn.disabled = state;
            eventPlannerBtn.disabled = state;
            storyStarterBtn.disabled = state;
        }

        function showModal(title, content) {
            modalTitle.textContent = title;
            modalBody.innerHTML = content;
            modal.classList.remove('hidden');
            modal.classList.add('flex');
            setTimeout(() => {
                 modalBackdrop.classList.remove('opacity-0');
                 modalContent.classList.remove('scale-95');
            }, 10);
        }

        function hideModal() {
            modalBackdrop.classList.add('opacity-0');
            modalContent.classList.add('scale-95');
            setTimeout(() => {
                 modal.classList.add('hidden');
                 modal.classList.remove('flex');
            }, 300);
        }

        // --- Gemini API Call ---
        async function callGemini(prompt) {
            if (isLoading) return;
            setLoading(true);

            showModal('Gemini is thinking...', `
                <div class="flex justify-center items-center h-24">
                    <svg class="animate-spin -ml-1 mr-3 h-10 w-10 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                </div>
            `);

            const payload = {
                contents: [{ role: "user", parts: [{ text: prompt }] }]
            };

            try {
                const response = await fetch(apiUrl, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });

                if (!response.ok) {
                     throw new Error(`API Error: ${response.status} ${response.statusText}`);
                }

                const result = await response.json();
                
                if (result.candidates && result.candidates.length > 0 && result.candidates[0].content.parts.length > 0) {
                    const text = result.candidates[0].content.parts[0].text;
                    return text.trim();
                } else {
                    console.error('Unexpected API response structure:', result);
                    return "Sorry, I couldn't get a response from Gemini. Please check the console.";
                }

            } catch (error) {
                console.error("Error calling Gemini API:", error);
                return `An error occurred: ${error.message}. Check the console for details.`;
            } finally {
                setLoading(false);
            }
        }

        // --- Event Listeners ---
        ideaGeneratorBtn.addEventListener('click', async () => {
            const prompt = "You are an AI assistant for a workshop with high/mid school kids. Generate one fun, creative project idea for a student to build with a large language model in under an hour. The project should be simple and result in a tangible output like a story, an image prompt, or a plan. Make the idea concise and exciting. Return only the idea as a single sentence.";
            const idea = await callGemini(prompt);
            ideaResultEl.textContent = idea;
            showModal('‚ú® New Idea!', `<p class="text-center text-lg">${idea}</p>`);
        });

        promptEnhancerBtn.addEventListener('click', async () => {
            const userInput = promptInput.value;
            if (!userInput.trim()) {
                showModal('Input Needed', '<p>Please enter a simple idea in the box first.</p>');
                return;
            }
            const prompt = `Take the following user's simple idea and enhance it into a detailed, descriptive prompt suitable for a text-to-image AI. Add details about the style (e.g., 'digital painting', 'photorealistic', 'anime style'), the setting, the mood, and the lighting. Return only the enhanced prompt. Simple idea: "${userInput}"`;
            const enhancedPrompt = await callGemini(prompt);
            showModal('‚ú® Enhanced Prompt', `<p class="text-base bg-gray-800 p-3 rounded-lg">${enhancedPrompt}</p>`);
        });
        
        interviewStarterBtn.addEventListener('click', async () => {
            const prompt = "You are a friendly interviewer at Google starting a mock interview with a high school student. Ask the very first introductory question to get the conversation started. Make it welcoming and open-ended. Return only the single question.";
            const response = await callGemini(prompt);
            showModal('ü§ù Your First Interview Question', `<p class="text-center text-lg font-medium">"${response}"</p><p class="text-sm text-center text-gray-400 mt-4">Now, you can copy this and continue the conversation with Gemini!</p>`);
        });

        eventPlannerBtn.addEventListener('click', async () => {
            const prompt = "You are an AI assistant helping a high school student plan a club event. Write a short, exciting invitation draft for a fictional school 'Gamers Guild' meeting. Include a catchy title, a brief description of activities (like video games and board games), and placeholders for [Date], [Time], and [Location]. Format it nicely but keep it brief. Return only the invitation draft.";
            const response = await callGemini(prompt);
            showModal('üéâ Event Invitation Draft', `<div class="text-left text-sm bg-gray-800 p-4 rounded-lg whitespace-pre-wrap">${response}</div>`);
        });

        storyStarterBtn.addEventListener('click', async () => {
            const prompt = "You are a creative writing assistant for a young adult author. Write a single, compelling opening line for a mystery story that starts in a seemingly ordinary high school. The line should be mysterious and intriguing. Return only the single sentence.";
            const response = await callGemini(prompt);
            showModal('üìñ Your Story\'s First Line', `<p class="text-center text-lg font-medium">"${response}"</p><p class="text-sm text-center text-gray-400 mt-4">What happens next? Use this line to start your story in Gemini.</p>`);
        });
        
        modalCloseBtn.addEventListener('click', hideModal);
        modalBackdrop.addEventListener('click', hideModal);

    </script>
</body>
</html>
